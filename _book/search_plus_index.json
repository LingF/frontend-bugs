{"./":{"url":"./","title":"前库知识库","keywords":"","body":"前库知识库 安装项目: gitbook install启动开发：gitbook serve [--port 4002] 微易前端知识库，收集前端知识、常见bug、分享文章。 前端知识分享 前端常见bug "},"docs/c1-浏览器常见问题/cookie发送不成功.html":{"url":"docs/c1-浏览器常见问题/cookie发送不成功.html","title":"cookie发送不成功","keywords":"","body":"cookie发送不成功 ajax发送请求，cookie发送不成功 原因: 跨域问题 代码使用了请求模拟, 如mockjs 解决方法：方法一：网页端中，对于跨域的 XMLHttpRequest 请求，需要设置withCredentials 属性为 true。同时服务端的响应中必须携带 Access-Control-Allow-Credentials: true 首部。如果服务端的响应中未携带Access-Control-Allow-Credentials: true 首部，浏览器将不会把响应的内容返回给发送者。 要想设置和获取跨域 Cookie，上面提到的两点缺一不可。另外有一点需要注意的是：规范中提到，如果 XMLHttpRequest 请求设置了withCredentials 属性，那么服务器不得设置 Access-Control-Allow-Origin的值为 ，否则浏览器将会抛出The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '' 错误。 方法二： Nginx反向代理解决前后端联调跨域问题 更多方法： "},"docs/c2-移动端兼容问题/0-移动端兼容性问题概览.html":{"url":"docs/c2-移动端兼容问题/0-移动端兼容性问题概览.html","title":"移动端兼容性问题概览","keywords":"","body":"移动端兼容性问题概览 兼容性问题与手机型号、系统版本有关，只出现在部分手机上设备更新换代快——低端机遗留下问题、高端机带来新挑战浏览器厂商不统一——兼容问题多网络更复杂——弱网络，页面打开慢低端机性能差——页面操作卡顿HTML5新技术多——学习成本不低 常见原因： 不支持es6某些新方法。如canvas\\promise等；使用了es6语法。部分手机不支持es6，可用插件将es6转成es5。 缓存问题。如：由于路由器或者cdn缓存，导致请求的文件不是最新的，或者缓存的文件内容缺失。 网络问题。如：部分地区网络出错，导致第三方插件无法加载、网络协议： http和https使用不对。    典型问题: IOS移动端click事件300ms的延迟相应 移动设备上的web网页是有300ms延迟的，往往会造成按钮点击延迟甚至是点击失效。 这是由于区分单机事件和双击屏幕缩放的历史原因造成的。 fastclick可以解决在手机上点击事件的300ms延迟 zepto的touch模块，tap事件也是为了解决在click的延迟问题 触摸屏的相应顺序为touchstart-->touchmove-->touchend-->click，也可以通过绑定ontouchstart事件，加快事件的响应，解决300ms的延迟问题 消除 transition 闪屏 -webkit-transform-style: preserve-3d; /*设置内嵌的元素在 3D 空间如何呈现：保留 3D*/ -webkit-backface-visibility: hidden; /*(设置进行转换的元素的背面在面对用户时是否可见：隐藏)*/ 打电话发短信写邮件怎么实现 打电话: 打电话给:0755-10086 发短信(winphone系统无效): 发短信给: 10086 写邮件:peun@foxmail.com 屏幕旋转的事件和样式 window.orientation，取值：正负90表示横屏模式、0和180表现为竖屏模式； window.onorientationchange = function(){ switch(window.orientation){ case -90: case 90: alert(\"横屏:\" + window.orientation); case 0: case 180: alert(\"竖屏:\" + window.orientation); break; } } //竖屏时使用的样式 @media all and (orientation:portrait) { .css{} } //横屏时使用的样式 @media all and (orientation:landscape) { .css{} } fixed bugios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位。android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位。ios4下不支持position:fixed 可用isroll.js，暂无完美方案 实现android和ios系统手机打开相机并可选择相册功能 $(function () { //获取浏览器的userAgent,并转化为小写 var ua = navigator.userAgent.toLowerCase(); //判断是否是苹果手机，是则是true var isIos = (ua.indexOf('iphone') != -1) || (ua.indexOf('ipad') != -1); if (isIos) { $(\"input:file\").removeAttr(\"capture\"); }; }) 识别手机屏幕:window.outerWidth和window.outerHeight，安卓手机识别，ios不认别。 window.innerWidth和window.innerHeight，安卓，ios都可认别 相关链接移动端web常见问题解决方案H5移动端ios/Android兼容性总结 "},"docs/c2-移动端兼容问题/1-移动端兼容性问题概览.html":{"url":"docs/c2-移动端兼容问题/1-移动端兼容性问题概览.html","title":"虚拟键盘关闭后，元素错位(部分安卓机)","keywords":"","body":"虚拟键盘关闭后，元素错位(部分安卓机) 弹层(加了position: fixed)中点击输入框弹出虚拟键盘，在区域1内点击（虚拟键盘关闭），页面元素错位。 原因: 与手机型号和系统版本有关，具体未知解决方法: 无 "},"docs/c3-html常见问题/图片间有空隙.html":{"url":"docs/c3-html常见问题/图片间有空隙.html","title":"img图片之间的间距问题","keywords":"","body":"img图片之间的间距问题 这个是浏览器的一个设计问题 img本来是行内元素，却可以用width 和height,当父元素没有设置高度的时候，用子元素们的高度计算出的高度给父元素的时候就会出现3px空隙这类的问题。 img图片默认排版为 inline-block;而所有的inline-block元素之间都会有空白。 解决方法: 把img标签设为块级元素：img{ display:block;} 将父容器字体大小设为零。font-size:0; 去掉img标签之间的空格。将所用的img标签书写在同一行（即各个img标签之间不留空格）,无须设置其他样式。 设置图片的垂直对齐方式：img{vertical-align:top;}。可选text-top，bottom，text-bottom等，视情况而定 改变父对象的属性: 如果父对象的高宽固定，图片大小随父对象而定，则可以设置父对象：overflow:hidden 设置图片的浮动属性: img{ float: left;} 移动端图片宽、高度，最好为偶数。具体原理与设备的象素比有关 "},"docs/c4-css常见问题/0-css常见问题概览.html":{"url":"docs/c4-css常见问题/0-css常见问题概览.html","title":"css常见问题概览","keywords":"","body":"css常见问题概览 禁止用户选中文字：-webkit-user-select:none； 去掉按钮touch时有蓝色的边框 : -webkit-tap-highlight-color:rgba(0,0,0,0)； 去除webkit的滚动条: ::-webkit-scrollbar{ display: none; }； 禁止保存或者拷贝图像(仅ios有效) : img { -webkit-touch-callout: none; } 禁止选中内容 htm: { -webkit-user-select: none;} 修改表单元素中placeholder 的样式： ::-webkit-input-placeholder{ }； 去除表单元素的默认样式: -webkit-appearance:none； 如select、input; 表单元素 的placeholder属性会使文本位置偏上line-height: （和input框的高度一样高）---pc端解决方法 line-height：normal ---移动端解决方法 input type=number之后，pc端出现上下箭头 input::-webkit-outer-spin-button, input::-webkit-inner-spin-button { -webkit-appearance: none !important; margin: 0; } table > td用col设置了宽度后超出部分隐藏: table加属性table-layout:fixed（固定宽度布局）； table > td 圆角表格： 设置border-collapse： collapse属性后，单元格td的圆角属性失效 table > td 定义了border-collapse:collapse属性，border-spacing属性不起做用 table > col和colgroup 能发挥作用还能保证兼容的应用就只有俩： width和background display:table-cell, 子元素不从顶部开始显示： vertical-align:top。table-cell默认居中。 表单元素和display:-webkit-box的问题：表单元素使用display:-webkit-box，文字无法居中。使用-webkit-flex-align:center, -webkit-flex-pack: center, text-align: center,都无效。可将-webkit-box改成display: block等。 body设置100%高度后被底部的导航栏挡住: document.documentElement.style.height = window.innerHeight + 'px'； body设置100%、overflow，仍有X方向滚动条: body没有设置postion:relative，且有absolute元素宽度超过屏幕宽度。 元素上下border不包含在元素高度height中；元素左右border、padding包含在元素的宽度width中，可用box-sizing:border-box改变。 border-radius百分比失效：部分Android不识别百分比单位，可设置一个较大值的px、em、rem单位；部分手机下，width值过大，border-radius无效； Android 4.2.x 不支持border-radius缩写。 Samsung S4圆角BugSamsung S4手机在 Android Browser4.4.2 上（其他版本未测），如果你使用了 border-radius，并且使用了 -webkit-transform 属性，当使用了 translatez 或者 translate3d 值，圆角会出现问题，可以直接使用 -webkit-transform: translate(0, 0) 来避免这个问题。 android 4.x bug 三星 Galaxy S4中自带浏览器不支持border-radius缩写 同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分 部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色 android无法同时播放多音频audio 背景图片CSS书写兼容问题： background:url() no-repeat top top/80% auto。部分手机不支持\"/\"后加参数的写法。需另外写background-size； 背景渐变颜色兼容问题： { //部分手机不支持background-image属性写渐变颜色。如酷派、联想s810t； background-image:-webkit-radial-gradient(center center, circle cover, #0087fb 0%, #0087fb 35%,transparent 35%); } a标签伪类顺序： { :link{}; :visited{}; :hover{}; :active{} //按L-V-H-A的顺序设置超链接样式即可，可速记为LoVe（喜欢）HAte（讨厌）； } CSS动画页面闪白,动画卡顿 1.尽可能地使用合成属性transform和opacity来设计CSS3动画，不使用position的left和top来定位 2.开启硬件加速 -webkit-transform: translate3d(0, 0, 0); -moz-transform: translate3d(0, 0, 0); -ms-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); IE无法设置滚动条的颜色：将原来设置在body上的滚动条颜色样式定义到html标签选择符上即可； 当文字超出范围时自动补...省略号： { //单行 white-space: nowrap; overflow: hidden; text-overflow:ellipsis; } { //多行 overflow: hidden; text-overflow: ellipsis; display:-moz-box; display:-webkit-box; display:box; -moz-line-clamp: 3; -webkit-line-clamp: 3; line-clamp: 3; -moz-box-orient: vertical; -webkit-box-orient: vertical; box-orient: vertical; } 快速回弹滚动 (iOS上拥有像Native 的滚动效果): { overflow: auto; -webkit-overflow-scrolling:touch; } "},"docs/c4-css常见问题/1-样式错乱（chrome中正常，发版到线上出错）.html":{"url":"docs/c4-css常见问题/1-样式错乱（chrome中正常，发版到线上出错）.html","title":"样式错乱（chrome中正常，发版到线上出错）","keywords":"","body":"样式错乱（chrome中正常，发版到线上出错） 页面样式在chrome中显示正常，发版到线上后 (build以后)，在部分手机上样式错乱。调试发现某些样式(如：disabled: box;)缺少前缀。 原因： autoprefixer配置问题 vue项目中通过autoprefixer自动给样式加前缀（即，加-webkit, -ms, -moz-, -o-等前缀）。具体需要对哪些浏览器哪些版本加前缀，是通过配置决定的。如webpack中： \"browserslist\": [ \"> 1%\", \"last 2 versions\" ] 其中last 2 versions是指定对最新的两个版本加前缀，这个指定是不固定。随着浏览器的更新，所指向的版本也变化，导致autoprefixed不对之前的一些旧版本加前缀。 解决方法： 通过修改配置（查看具体参数），指定需要加前缀的浏览器及对应版本。比如： \"browserslist\": [ \"> 1%\", \"last 2 versions\", \"Android >= 3.2\", \"Firefox >= 20\", \"iOS >= 7\", \"chrome > 20\" ] "},"docs/c4-css常见问题/2-1像素边框显示不全.html":{"url":"docs/c4-css常见问题/2-1像素边框显示不全.html","title":"1像素边框显示不全","keywords":"","body":"1像素边框显示不全 移动端1像素边框问题： 设置边框为 1px solid #000; 实际表现却是边框线是模糊的，或者是大于1px的。原因是：不同手机物理像素不同，对应的设备像素比不同，同样的1pxcss像素，转换成物理像素后，尺寸是不同的，所以导致了显示的差异。 1px边框有以下几种方式实现： border: .5px solid #000; 阴影box-shadow 边框背景图片：border-image 整个元素使用带边框的背景图片 转换中的缩放 scale 利用JS根据window.devicePixelRatio分别进行判断修改根节点的fontSize，其他元素以rem为单位 其中边框设为0.5px缺点是，有时候边框显示不全（如图）。 原因： 未确定。解决方法： 上边框被遮住，样式中有 { position: absolute； top：50% },可以尝试把改成 top: 51%. 尽量不要使用display: inline-block，改用display: block。 相关链接：移动web 1像素边框 瞧瞧大公司是怎么做的 "},"docs/c5-js常见问题/1-关于时间对象的夏令时问题.html":{"url":"docs/c5-js常见问题/1-关于时间对象的夏令时问题.html","title":"关于时间对象的夏令时问题","keywords":"","body":"关于时间对象的夏令时问题 表现行为：new Date(584290800000) （当前东八时区）Fri Jul 08 1988 00:00:00 GMT+0900 (CDT) (执行结果，变成东九时区) new Date('1988-9-11') Sun Sep 11 1988 00:00:00 GMT+0800 (中国标准时间) new Date('1988-9-10') Sat Sep 10 1988 00:00:00 GMT+0900 (中国夏令时间) 原因:由于夏令时问题，时间戳新建时间对象，在安卓或chrome中，解析为 1988-07-08 00:00:00(东九区)。但在ios或safri中，解析为1988-07-07 23:00:00（东八区）。 夏时制，夏时令（Daylight Saving Time：DST），又称“日光节约时制”和“夏令时间”，是一种为节约能源而人为规定地方时间的制度，在这一制度实行期间所采用的统一时间称为“夏令时间”。一般在天亮早的夏季人为将时间提前一小时，可以使人早起早睡，减少照明量，以充分利用光照资源，从而节约照明用电。各个采纳夏时制的国家具体规定不同。目前全世界有近110个国家每年要实行夏令时。 1986年至1991年，中华人民共和国在全国范围实行了六年夏令时，每年从4月中旬的第一个星期日2时整（北京时间）到9月中旬第一个星期日的凌晨2时整（北京夏令时）。除1986年因是实行夏令时的第一年，从5月4日开始到9月14日结束外，其它年份均按规定的时段施行。夏令时实施期间，将时间调快一小时。1992年4月5日后不再实行。 解决方法:前端暂无解决文案。建议不存储时间对象，存时间字符串 "},"docs/c5-js常见问题/2-页面回退不刷新.html":{"url":"docs/c5-js常见问题/2-页面回退不刷新.html","title":"页面回退不刷新","keywords":"","body":"页面回退不刷新 A页面跳转B页面，再回退到A页面，A页面不刷新 原因： B页面回退到A页面，移动端部分浏览器 (如iphoneX) 默认不执行更新操作。 B页面回退到A页面，执行了更新操作。但ajax请求从本地缓存中读取数据，导致页面数据不更新。 在app中跳转B页面，新开了窗口(类似于浏览器中新开了标签页) 解决： 调用pageshow事件，强制刷新。代码如下： var isPageHide = false window.addEventListener('pageshow', function () { isPageHide && window.location.reload() }) window.addEventListener('pagehide', function () { isPageHide = true }) 请求接口地址加上时间戳。如上接口地址，改为：'.../family/dataInfo/167?v=' + new Date().getTime() 在app中新开窗口，需要原生提拱回退监听事件(A页面监听回退，执行刷新) "},"docs/c5-js常见问题/3-undefined is not a function.html":{"url":"docs/c5-js常见问题/3-undefined is not a function.html","title":"undefined is not a function","keywords":"","body":"undefined is not a function 出现'undefined is not a funcation'错误通常是某个方法没有调用。而有些情况在PC机的浏览器中是正常的，转到移动端出现这种错误(通常难以查找)。 这种错误的原因有多种，以下列出几种可能的原因 原因: 使用了es6中的findIndex等一些新API。部分安卓机不支持 如果我们没有配置一些规则，Babel 默认只转换新的 JavaScript 句法（syntax），而不转换新的 API，比如 Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise 等全局对象，以及一些定义在全局对象上的方法（比如 Array.findIndex、Object.assign 等）都不会转码。 解决： 使用babel-polyfill，为当前环境提供一个垫片。 相关链接: babel-polyfill使用与性能优化 "},"docs/c6-其他问题/1-小程序开发中遇到的问题.md.html":{"url":"docs/c6-其他问题/1-小程序开发中遇到的问题.md.html","title":"小程序开发中遇到的问题","keywords":"","body":"小程序开发中遇到的问题 小程序相关问题: 个人或海外公众号不支持webview内嵌h5页面 webview中内嵌的链接来源必须在业务域名内。 navigator跳转的链接，不能是app.json中tabBar.list中的页面 wxss，即小程序样式，不支持样式嵌套 清除缓存问题 微信开发者工具 -> 小程序开发: 有清除缓存功能 移动端: 删除小程序 版本的判断 目前(2018-9-25)，小程序中没有提供判断开发版、体验版、线上版的api 使用mpvue开发微信小程序 mpvue 是一个使用 Vue.js 开发小程序的前端框架（美团的开源项目）。框架基于 Vue.js 核心，mpvue 修改了 Vue.js 的 runtime 和 compiler 实现，使其可以运行在小程序环境中，从而为小程序开发引入了整套 Vue.js 开发体验。 事件绑定问题。小程序默认用bind。mpvue中用@代替vue "}}